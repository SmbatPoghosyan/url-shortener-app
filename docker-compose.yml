version: '3.8'
services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: url-shortener
      POSTGRES_PASSWORD: url-shortener1
      POSTGRES_DB: url_shortener
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U url-shortener -d url_shortener"]
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    build: ./backend
    environment:
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: url-shortener
      DB_PASSWORD: url-shortener1
      DB_NAME: url_shortener
      JWT_SECRET: supersecret
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '3000:3000'
    healthcheck:
      test: ["CMD-SHELL", "node -e 'require(\"http\").get(\"http://localhost:3000/health\", (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on(\"error\", () => process.exit(1))'"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: http://localhost:3000
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - '3200:80'
    environment:
      - REACT_APP_API_URL=http://localhost:3000
volumes:
  db_data:
